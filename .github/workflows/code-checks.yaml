name: Code Checks

on:
  push:
  pull_request:
  workflow_dispatch:

concurrency:
  group: '${{ github.workflow }} @ ${{ github.event.pull_request.head.label || github.head_ref || github.ref }}'
  cancel-in-progress: true

jobs:
  setup:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php-version: ['7.4', '8.0', '8.1', '8.2', '8.3']
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set safe.directory for Git
        run: git config --global --add safe.directory /app

      - name: Cache Composer dependencies
        id: composer-cache
        uses: actions/cache@v4
        with:
          path: /tmp/composer-cache
          key: ${{ runner.os }}-${{ matrix.php-version }}-${{ hashFiles('**/composer.lock') }}

      - name: Install Composer
        uses: php-actions/composer@v6
        with:
          php_version: ${{ matrix.php-version }}

      - name: Save Composer dependencies as an artifact
        uses: actions/upload-artifact@v4
        with:
          name: composer-dependencies-${{ matrix.php-version }}
          path: ${{ github.workspace }}/vendor

  lint:
    runs-on: ubuntu-latest
    needs: setup
    strategy:
      matrix:
        php-version: ['7.4', '8.0', '8.1', '8.2', '8.3']
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set safe.directory for Git
        run: git config --global --add safe.directory /app

      - name: Download Composer dependencies
        uses: actions/download-artifact@v4
        with:
          name: composer-dependencies-${{ matrix.php-version }}
          path: ${{ github.workspace }}/vendor

      - name: Run PHP Lint
        uses: php-actions/composer@v6
        with:
          php_version: ${{ matrix.php-version }}
          command: php-lint

  cs-check:
    runs-on: ubuntu-latest
    needs: setup
    strategy:
      matrix:
        php-version: ['7.4', '8.0', '8.1', '8.2', '8.3']
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set safe.directory for Git
        run: git config --global --add safe.directory /app

      - name: Download Composer dependencies
        uses: actions/download-artifact@v4
        with:
          name: composer-dependencies-${{ matrix.php-version }}
          path: ${{ github.workspace }}/vendor

      - name: Run CS Check
        uses: php-actions/composer@v6
        with:
          php_version: ${{ matrix.php-version }}
          command: cs-check

  phpunit:
    runs-on: ubuntu-latest
    needs: setup
    strategy:
      matrix:
        php-version: ['7.4', '8.0', '8.1', '8.2', '8.3']
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set safe.directory for Git
        run: git config --global --add safe.directory /app

      - name: Download Composer dependencies
        uses: actions/download-artifact@v4
        with:
          name: composer-dependencies-${{ matrix.php-version }}
          path: ${{ github.workspace }}/vendor

      - name: Run PHPUnit
        uses: php-actions/composer@v6
        with:
          php_version: ${{ matrix.php-version }}
          php_extensions: pcov
          command: test

      - name: Code Coverage Report
        uses: irongut/CodeCoverageSummary@v1.3.0
        with:
          filename: coverage.xml
          badge: true
          fail_below_min: false
          format: markdown
          hide_branch_rate: false
          hide_complexity: false
          indicators: true
          output: both
          thresholds: '60 80'

      - name: Add Coverage PR Comment
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          recreate: true
          header: "PHP 8.3 Coverage Report"
          path: code-coverage-results.md
